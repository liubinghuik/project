<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.accp.mapper.StaffMapper" >
  <resultMap id="BaseResultMap" type="com.accp.domain.Staff" >
    <id column="stid" property="stid" jdbcType="INTEGER" />
    <result column="sid" property="sid" jdbcType="INTEGER" />
    <result column="pid" property="pid" jdbcType="INTEGER" />
    <result column="jobnumber" property="jobnumber" jdbcType="VARCHAR" />
    <result column="stname" property="stname" jdbcType="VARCHAR" />
    <result column="stpwd" property="stpwd" jdbcType="VARCHAR" />
    <result column="ststate" property="ststate" jdbcType="INTEGER" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    stid, sid, pid, jobnumber, stname, stpwd, ststate, createtime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.accp.domain.StaffExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from staff
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from staff
    where stid = #{stid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from staff
    where stid = #{stid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.accp.domain.StaffExample" >
    delete from staff
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.accp.domain.Staff" >
    insert into staff (stid, sid, pid, 
      jobnumber, stname, stpwd, 
      ststate, createtime)
    values (#{stid,jdbcType=INTEGER}, #{sid,jdbcType=INTEGER}, #{pid,jdbcType=INTEGER}, 
      #{jobnumber,jdbcType=VARCHAR}, #{stname,jdbcType=VARCHAR}, #{stpwd,jdbcType=VARCHAR}, 
      #{ststate,jdbcType=INTEGER}, #{createtime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.accp.domain.Staff" >
    insert into staff
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="stid != null" >
        stid,
      </if>
      <if test="sid != null" >
        sid,
      </if>
      <if test="pid != null" >
        pid,
      </if>
      <if test="jobnumber != null" >
        jobnumber,
      </if>
      <if test="stname != null" >
        stname,
      </if>
      <if test="stpwd != null" >
        stpwd,
      </if>
      <if test="ststate != null" >
        ststate,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="stid != null" >
        #{stid,jdbcType=INTEGER},
      </if>
      <if test="sid != null" >
        #{sid,jdbcType=INTEGER},
      </if>
      <if test="pid != null" >
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="jobnumber != null" >
        #{jobnumber,jdbcType=VARCHAR},
      </if>
      <if test="stname != null" >
        #{stname,jdbcType=VARCHAR},
      </if>
      <if test="stpwd != null" >
        #{stpwd,jdbcType=VARCHAR},
      </if>
      <if test="ststate != null" >
        #{ststate,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.accp.domain.StaffExample" resultType="java.lang.Integer" >
    select count(*) from staff
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update staff
    <set >
      <if test="record.stid != null" >
        stid = #{record.stid,jdbcType=INTEGER},
      </if>
      <if test="record.sid != null" >
        sid = #{record.sid,jdbcType=INTEGER},
      </if>
      <if test="record.pid != null" >
        pid = #{record.pid,jdbcType=INTEGER},
      </if>
      <if test="record.jobnumber != null" >
        jobnumber = #{record.jobnumber,jdbcType=VARCHAR},
      </if>
      <if test="record.stname != null" >
        stname = #{record.stname,jdbcType=VARCHAR},
      </if>
      <if test="record.stpwd != null" >
        stpwd = #{record.stpwd,jdbcType=VARCHAR},
      </if>
      <if test="record.ststate != null" >
        ststate = #{record.ststate,jdbcType=INTEGER},
      </if>
      <if test="record.createtime != null" >
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update staff
    set stid = #{record.stid,jdbcType=INTEGER},
      sid = #{record.sid,jdbcType=INTEGER},
      pid = #{record.pid,jdbcType=INTEGER},
      jobnumber = #{record.jobnumber,jdbcType=VARCHAR},
      stname = #{record.stname,jdbcType=VARCHAR},
      stpwd = #{record.stpwd,jdbcType=VARCHAR},
      ststate = #{record.ststate,jdbcType=INTEGER},
      createtime = #{record.createtime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.accp.domain.Staff" >
    update staff
    <set >
      <if test="sid != null" >
        sid = #{sid,jdbcType=INTEGER},
      </if>
      <if test="pid != null" >
        pid = #{pid,jdbcType=INTEGER},
      </if>
      <if test="jobnumber != null" >
        jobnumber = #{jobnumber,jdbcType=VARCHAR},
      </if>
      <if test="stname != null" >
        stname = #{stname,jdbcType=VARCHAR},
      </if>
      <if test="stpwd != null" >
        stpwd = #{stpwd,jdbcType=VARCHAR},
      </if>
      <if test="ststate != null" >
        ststate = #{ststate,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where stid = #{stid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.accp.domain.Staff" >
    update staff
    set sid = #{sid,jdbcType=INTEGER},
      pid = #{pid,jdbcType=INTEGER},
      jobnumber = #{jobnumber,jdbcType=VARCHAR},
      stname = #{stname,jdbcType=VARCHAR},
      stpwd = #{stpwd,jdbcType=VARCHAR},
      ststate = #{ststate,jdbcType=INTEGER},
      createtime = #{createtime,jdbcType=TIMESTAMP}
    where stid = #{stid,jdbcType=INTEGER}
  </update> 
  <!-- 根据工号查询员工信息 -->
  <select id="selectstaffByjobnumber" parameterType="String" resultMap="BaseResultMap">
  	SELECT * FROM staff WHERE jobnumber=#{0}
  </select>
   <!-- 根据工号查询员工信息 -->
  <select id="selectstaffBystid" parameterType="int" resultMap="BaseResultMap">
  	SELECT * FROM staff WHERE stid=#{0}
  </select>
  <!-- 新增员工 -->
  <insert id="insertstaff" parameterType="com.accp.domain.Staff">
  	INSERT INTO staff(`sid`,`pid`,`jobnumber`,`stname`,`stpwd`,`ststate`)
	VALUES(#{sid},#{pid},#{jobnumber},#{stname},#{stpwd},0);
  </insert>
 <!--  修改员工信息 -->
  <update id="updatestaff" parameterType="com.accp.domain.Staff">
  	update staff set sid=#{sid},pid=#{pid},jobnumber=#{jobnumber},stname=#{stname},stpwd=#{stpwd}
	where stid=#{stid}
  </update>
 <!--  修改员工状态，即删除员工 -->
  <update id="updatestaffdelete" parameterType="int">
  	update staff set ststate=1
	where stid=#{stid}
  </update> 
</mapper>